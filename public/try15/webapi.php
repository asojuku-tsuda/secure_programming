<?php
/**
 * パラメータを検証して取得する
 * 
 * @param string $key     取得するパラメータのキー
 * @param string $pattern 検証用の正規表現パターン
 * @param string $error   エラー時に返す値
 * @return string         検証済みのパラメータ値
 */
function getParam($key, $pattern, $error) {
    // GETのパラメータを取り出す
    $val = filter_input(INPUT_GET, $key);

    // nullの場合は空文字列にする
    if ($val === null) {
        $val = '';
    }

    // 文字エンコーディング(UTF-8)のチェック
    if (!mb_check_encoding($val, 'UTF-8')) {
        die('文字エンコーディングが不正です');
    }

    // 引数で受け取ったパターンでチェック
    if (preg_match($pattern, $val) !== 1) {
        $val = $error;
    }
    
    return $val;
}

// 郵便番号パラメータを取得
$postnum = getParam('postnum', '/\A[0-9]{1,7}\z/', '7桁の郵便番号を入力してください');

// 郵便番号と住所のマッピング
$ary = [
    "8100001" => "福岡市中央区天神",
    "8100002" => "福岡市中央区西中洲",
    "8100003" => "福岡県福岡市中央区春吉",
    "8100004" => "福岡市中央区渡辺通",
    "8100005" => "福岡市中央区清川",
    "8100006" => "福岡市中央区浄水通",
    "8100011" => "福岡市中央区高砂",
    "8100012" => "福岡市中央区白金",
    "8100013" => "福岡市中央区大宮",
    "8100014" => "福岡市中央区平尾",
    "8100015" => "福岡市中央区那の津",
    "8100021" => "福岡市中央区今泉",
    "8100022" => "福岡市中央区薬院",
    "8100023" => "福岡市中央区警固",
    "8100024" => "福岡市中央区桜坂",
    "8100025" => "福岡市中央区薬院伊福町",
    "8100031" => "福岡市中央区谷",
    "8100032" => "福岡市中央区輝国",
    "8100033" => "福岡市中央区小笹",
    "8100034" => "福岡市中央区笹丘",
    "8100035" => "福岡市中央区梅光園",
    "8100041" => "福岡市中央区大名",
    "8100042" => "福岡市中央区赤坂",
    "8100043" => "福岡市中央区城内",
    "8100044" => "福岡市中央区六本松",
    "8100045" => "福岡市中央区草香江",
    "8100051" => "福岡市中央区大濠公園",
    "8100052" => "福岡市中央区下川端町",
    "8100053" => "福岡市中央区鳥飼",
    "8100054" => "福岡市中央区今川",
    "8100055" => "福岡市中央区黒門",
    "8100061" => "福岡市中央区西公園",
    "8100062" => "福岡市中央区荒戸",
    "8100063" => "福岡市中央区唐人町",
    "8100064" => "福岡市中央区地行",
    "8100065" => "福岡市中央区地行浜",
    "8100066" => "福岡市中央区福浜",
    "8100071" => "福岡市中央区舞鶴",
    "8100072" => "福岡市中央区長浜",
    "8100073" => "福岡市中央区舞鶴",
    "8100074" => "福岡市中央区大手門",
    "8100075" => "福岡市中央区港",
    "8100801" => "福岡市博多区中洲",
    "8100802" => "福岡市博多区中洲中島町",
    "8100803" => "福岡市博多区千代",
    "8100804" => "福岡市博多区祇園町",
    "8100805" => "福岡市博多区東公園",
    "8110101" => "福岡市東区大字香椎",
    "8110102" => "福岡市東区香椎駅東",
    "8110103" => "福岡市東区香住ヶ丘",
    "8110104" => "福岡市東区青葉",
    "8110105" => "福岡市東区西戸崎",
    "8120011" => "福岡市博多区博多駅前",
    "8120012" => "福岡市博多区博多駅中央街",
    "8120013" => "福岡市博多区博多駅東",
    "8120014" => "福岡市博多区比恵町",
    "8120015" => "福岡市博多区山王",
    "8120016" => "福岡市博多区博多駅南",
    "8120017" => "福岡市博多区美野島",
    "8120018" => "福岡市博多区住吉",
    "8140001" => "福岡市早良区百道浜",
    "8140002" => "福岡市早良区西新",
    "8140003" => "福岡市早良区城西",
    "8140004" => "福岡市早良区曙",
    "8140005" => "福岡市早良区早良"
];

// 初期値を設定
$chimei = "";
$result = -1;

// 郵便番号が存在するか確認
if (array_key_exists($postnum, $ary)) {
    $chimei = $ary[$postnum];
    $result = 0;
}

// 返却用の配列を作成
$retary = [
    "chimei" => $chimei,
    "result" => $result,
    "param" => $postnum
];

// JSON形式に変換して出力
$retjson = json_encode($retary);
echo $retjson;
?><?php
/**
 * パラメータを検証して取得する
 * 
 * @param string $key     取得するパラメータのキー
 * @param string $pattern 検証用の正規表現パターン
 * @param string $error   エラー時に返す値
 * @return string         検証済みのパラメータ値
 */
function getParam($key, $pattern, $error) {
    // GETのパラメータを取り出す
    $val = filter_input(INPUT_GET, $key);

    // nullの場合は空文字列にする
    if ($val === null) {
        $val = '';
    }

    // 文字エンコーディング(UTF-8)のチェック
    if (!mb_check_encoding($val, 'UTF-8')) {
        die('文字エンコーディングが不正です');
    }

    // 引数で受け取ったパターンでチェック
    if (preg_match($pattern, $val) !== 1) {
        $val = $error;
    }
    
    return $val;
}

// 郵便番号パラメータを取得
$postnum = getParam('postnum', '/\A[0-9]{1,7}\z/', '7桁の郵便番号を入力してください');

// 郵便番号と住所のマッピング
$ary = [
    "8100001" => "福岡市中央区天神",
    "8100002" => "福岡市中央区西中洲",
    "8100003" => "福岡県福岡市中央区春吉",
    "8100004" => "福岡市中央区渡辺通",
    "8100005" => "福岡市中央区清川",
    "8100006" => "福岡市中央区浄水通",
    "8100011" => "福岡市中央区高砂",
    "8100012" => "福岡市中央区白金",
    "8100013" => "福岡市中央区大宮",
    "8100014" => "福岡市中央区平尾",
    "8100015" => "福岡市中央区那の津",
    "8100021" => "福岡市中央区今泉",
    "8100022" => "福岡市中央区薬院",
    "8100023" => "福岡市中央区警固",
    "8100024" => "福岡市中央区桜坂",
    "8100025" => "福岡市中央区薬院伊福町",
    "8100031" => "福岡市中央区谷",
    "8100032" => "福岡市中央区輝国",
    "8100033" => "福岡市中央区小笹",
    "8100034" => "福岡市中央区笹丘",
    "8100035" => "福岡市中央区梅光園",
    "8100041" => "福岡市中央区大名",
    "8100042" => "福岡市中央区赤坂",
    "8100043" => "福岡市中央区城内",
    "8100044" => "福岡市中央区六本松",
    "8100045" => "福岡市中央区草香江",
    "8100051" => "福岡市中央区大濠公園",
    "8100052" => "福岡市中央区下川端町",
    "8100053" => "福岡市中央区鳥飼",
    "8100054" => "福岡市中央区今川",
    "8100055" => "福岡市中央区黒門",
    "8100061" => "福岡市中央区西公園",
    "8100062" => "福岡市中央区荒戸",
    "8100063" => "福岡市中央区唐人町",
    "8100064" => "福岡市中央区地行",
    "8100065" => "福岡市中央区地行浜",
    "8100066" => "福岡市中央区福浜",
    "8100071" => "福岡市中央区舞鶴",
    "8100072" => "福岡市中央区長浜",
    "8100073" => "福岡市中央区舞鶴",
    "8100074" => "福岡市中央区大手門",
    "8100075" => "福岡市中央区港",
    "8100801" => "福岡市博多区中洲",
    "8100802" => "福岡市博多区中洲中島町",
    "8100803" => "福岡市博多区千代",
    "8100804" => "福岡市博多区祇園町",
    "8100805" => "福岡市博多区東公園",
    "8110101" => "福岡市東区大字香椎",
    "8110102" => "福岡市東区香椎駅東",
    "8110103" => "福岡市東区香住ヶ丘",
    "8110104" => "福岡市東区青葉",
    "8110105" => "福岡市東区西戸崎",
    "8120011" => "福岡市博多区博多駅前",
    "8120012" => "福岡市博多区博多駅中央街",
    "8120013" => "福岡市博多区博多駅東",
    "8120014" => "福岡市博多区比恵町",
    "8120015" => "福岡市博多区山王",
    "8120016" => "福岡市博多区博多駅南",
    "8120017" => "福岡市博多区美野島",
    "8120018" => "福岡市博多区住吉",
    "8140001" => "福岡市早良区百道浜",
    "8140002" => "福岡市早良区西新",
    "8140003" => "福岡市早良区城西",
    "8140004" => "福岡市早良区曙",
    "8140005" => "福岡市早良区早良"
];

// 初期値を設定
$chimei = "";
$result = -1;

// 郵便番号が存在するか確認
if (array_key_exists($postnum, $ary)) {
    $chimei = $ary[$postnum];
    $result = 0;
}

// 返却用の配列を作成
$retary = [
    "chimei" => $chimei,
    "result" => $result,
    "param" => $postnum
];

// JSON形式に変換して出力
$retjson = json_encode($retary);
echo $retjson;
?>